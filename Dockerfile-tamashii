#BUILD & SAVE:
#DOCKER_BUILDKIT=1 token_here docker build --rm -f "Dockerfile" -t tamashii --secret id=usr,src=usr.txt --secret id=token,src=token.txt "." && docker save tamashii | gzip > tamashii.tar.gz
#--progress plain --no-cache

FROM ubuntu:jammy AS build
#FROM python:3-slim AS build

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update -qq && \
    apt-get -qq -y upgrade && \
    apt-get install -qq -y git curl zip unzip tar gcc pkg-config cmake wget gnupg build-essential software-properties-common \
                        python3-dev python3-pip libtinfo5 \
                        libspdlog-dev libxcb-keysyms1-dev libxcb-xfixes0-dev libxcb-cursor-dev libxcb-xkb-dev \
                        libxcb-util-dev libncurses5 libncurses5-dev

RUN git clone --quiet https://github.com/microsoft/vcpkg
RUN sh vcpkg/bootstrap-vcpkg.sh -disableMetrics
RUN vcpkg/vcpkg install spdlog:x64-linux

#jammy
RUN wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | tee /etc/apt/trusted.gpg.d/lunarg.asc && \
    wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list

#focal
# RUN wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | apt-key add - && \
#     wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list http://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list

RUN apt-get update -qq && apt-get install -qq -y xorg-dev libvulkan-dev vulkan-headers vulkan-validationlayers

#ENV DUMMY="Dummy9"
RUN --mount=type=secret,id=token git clone --quiet --recursive https://$(cat /run/secrets/usr):$(cat /run/secrets/token)@gitlab.cg.tuwien.ac.at/llipp/tamashii.git -b dev-dh-fork-cf-ecosys
#-b dev-dh-python

WORKDIR tamashii/build
#RUN pip install nanobind numpy
#RUN printf '# Detect the installed nanobind package and import it into CMake\nexecute_process(COMMAND "${Python_EXECUTABLE}" -m nanobind --cmake_dir OUTPUT_STRIP_TRAILING_WHITESPACE OUTPUT_VARIABLE NB_DIR)\nlist(APPEND CMAKE_PREFIX_PATH "${NB_DIR}")\nfind_package(nanobind CONFIG REQUIRED)' >> ../CMakeLists.txt
#RUN sed -i "s/option(BUILD_PYTHON_BINDINGS \"Build Python bindings\" ON)/option(BUILD_PYTHON_BINDINGS \"Build Python bindings\" OFF)/g" ../CMakeLists.txt
#RUN sed -i "s/Matrix.hpp/matrix.hpp/g" ../include/tamashii/bindings/*.hpp
RUN sed -i "s/tan((0.01745329251994329576923690768489f/(float)tan((0.01745329251994329576923690768489f/g" ../external/imoguizmo/imoguizmo.hpp

#ENV CC=/usr/bin/clang
#ENV CXX=/usr/bin/clang++
#ENV CC=/usr/bin/gcc
#ENV CXX=/usr/bin/g++

RUN cmake .. -DCMAKE_CXX_FLAGS="-w -Wno-unused-result"
#RUN cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON ..
    # -DPYTHON_INCLUDE_DIR=$(python -c "import sysconfig; print(sysconfig.get_path('include'))")  \
    # -DPYTHON_LIBRARY=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))") \
    # -DPYTHON_EXECUTABLE:FILEPATH=`which python`

RUN make -j
#RUN make -j -n

ENTRYPOINT ["/bin/sh"]
